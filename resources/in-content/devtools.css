/* handles context menus opened in devtools processes,
and a few elements like checkboxes */

@-moz-document url-prefix("chrome://devtools/content/")
{
  :root,
  menupopup {
    --toolbarbutton-border-radius: var(--uc-border-radius) !important;
    --urlbar-icon-border-radius: var(--uc-border-radius) !important;
    --lwt-accent-color: var(--uc-accent-color) !important;
    --lwt-text-color: var(--uc-arrowpanel-color) !important;
    --lwt-toolbar-field-color: hsl(240, 60%, 99%);
    --lwt-toolbar-field-focus-color: rgb(255, 255, 255) !important;
    --toolbar-color: hsl(0, 0%, 100%) !important;
    --lwt-background-alignment: top !important;
    --lwt-background-tiling: repeat !important;
  }

  menupopup
    > :is(menuitem, menu, menucaption, menugroup, menuseparator, search-textbox),
  panel > richlistbox > richlistitem {
    margin-inline: var(--uc-inner-padding-magnitude);
  }

  input:is([type="checkbox"], [type="radio"]) {
    appearance: none !important;
    width: 14px;
    height: 14px;
    fill: currentColor;
    -moz-context-properties: fill, fill-opacity, stroke;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    border: 1px solid var(--color0099);
    background-color: var(--checkbox-unchecked-bgcolor);
    color: var(--in-parent-primary-button-text-color);
  }

  input[type="checkbox"] {
    border-radius: 2px;
    margin-inline: 4px;
    margin-block: 3px 2px;
  }

  .devtools-checkbox-label:not([hidden]) {
    display: flex;
    align-items: center;
  }

  .devtools-checkbox-label input[type="checkbox"] {
    margin-block: 3px;
  }

  input:is([type="checkbox"], [type="radio"]):is(:hover, :focus-visible) {
    background-color: var(--color03);
  }

  input:is([type="checkbox"], [type="radio"]):is(:hover, :focus-visible):active {
    background-color: var(--checkbox-unchecked-active-bgcolor);
  }

  input:is([type="checkbox"], [type="radio"]):is([checked="true"], :checked):is(:hover, :focus-visible) {
    background-color: var(--uc-hover-bgcolor);
  }

  input:is([type="checkbox"], [type="radio"]):is([checked="true"], :checked):is(:hover, :focus-visible):active {
    background-color: var(--uc-active-bgcolor);
  }

  input[type="checkbox"]:is([checked="true"], :checked) {
    background-image: url(chrome://userchrome/content/check.svg);
    border-color: var(--uc-border-color);
    background-color: var(--color01);
  }

  input[type="radio"] {
    border-radius: 100%;
    margin-inline: 4px;
  }

  input[type="radio"]:is([checked="true"], :checked) {
    background-image: url(chrome://userchrome/content/radio.svg);
    border-color: var(--uc-border-color);
    background-color: var(--color01);
  }

  menupopup {
    appearance: none !important;
    background: var(--window-color) !important;
    border: none !important;
    border-radius: var(--uc-border-radius) !important;
    margin: var(--uc-margin) !important;
    overflow: hidden !important;
  }

  menupopup menu > menupopup {
    margin-inline-start: var(--uc-margin) !important;
    margin-block-start: var(--uc-margin) !important;
  }

  menupopup:not([height], .in-menulist) {
    --menupopup-overflowing-inner-box-margin: 0;
  }

  .menupopup-arrowscrollbox {
    background-color: var(--menu-background-color) !important;
    color: var(--menu-color) !important;
    border-radius: var(--uc-border-radius) !important;
    box-shadow: var(--uc-shadow) !important;
  }

  .menupopup-arrowscrollbox[orient="vertical"][overflowing="true"] {
    margin-block: var(
      --uc-overflowing-inner-box-margin,
      var(--uc-inner-box-margin)
    ) !important;
  }

  :is(menuitem, menu),
  panel[type="autocomplete-richlistbox"] > richlistbox > richlistitem {
    appearance: none !important;
    color: var(--menu-color) !important;
    padding: 0 !important;
    min-height: var(--menuitem-height) !important;
    border-radius: var(--context-menuitem-border-radius);
  }

  :is(menuitem, menu)[disabled="true"],
  panel[type="autocomplete-richlistbox"]
    > richlistbox
    > richlistitem[disabled="true"] {
    appearance: none !important;
    color: var(--menu-disabled-color) !important;
    background-color: initial !important;
  }

  :is(menuitem, menu) .menu-iconic-left {
    padding: 0 !important;
    appearance: none !important;
    margin-inline-end: 0 !important;
  }

  :is(menuitem, menu) .menu-iconic-icon {
    margin-inline: var(--context-iconic-margin);
  }

  panel[type="autocomplete-richlistbox"]
    > richlistbox
    > richlistitem
    :is(.ac-site-icon, .ac-type-icon) {
    margin-inline: var(--context-iconic-margin) !important;
    margin-inline-start: 0 !important;
  }

  menugroup {
    padding: 0 !important;
    background-color: transparent !important;
  }

  .menu-right {
    appearance: none !important;
    padding: 0px !important;
    margin-right: var(--menu-right-margin) !important;
    min-width: 0 !important;
    width: var(--menu-right-size) !important;
    height: var(--menu-right-size) !important;
    fill: currentColor !important;
    -moz-context-properties: fill, fill-opacity, stroke, stroke-opacity !important;
    fill-opacity: 0.6 !important;
    background-size: 10px 10px !important;
    background-position: center !important;
    background-repeat: no-repeat !important;
    background-image: var(--menu-right-bg) !important;
    list-style-image: var(--menu-right-img) !important;
  }

  menu[disabled="true"] > .menu-right {
    visibility: collapse;
  }

  :is(menu, menuitem)[_moz-menuactive="true"]:not([disabled="true"]) {
    appearance: none !important;
    background-color: var(--secondary-color) !important;
  }

  :is(menu, menuitem)[_moz-menuactive="true"][disabled="true"] {
    background: none !important;
    appearance: none !important;
  }

  .subviewbutton:is(:hover, :focus-visible, [_moz-menuactive="true"])[disabled="true"] {
    color: var(--menu-disabled-color) !important;
  }

  menu.subviewbutton:not([disabled="true"])[_moz-menuactive="true"]:active {
    background: var(--secondary-color) !important;
    box-shadow: none !important;
  }

  menupopup menuitem:is([type="checkbox"], [type="radio"])::before {
    position: relative;
    display: -moz-inline-box;
    width: 14px;
    height: 14px;
    margin-inline: var(--uc-margin);
    fill: currentColor;
    -moz-context-properties: fill, fill-opacity, stroke;
    content: "";
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
    border: 1px solid var(--color0099);
    background-color: var(--checkbox-unchecked-bgcolor);
    color: var(--in-parent-primary-button-text-color);
  }

  menupopup menuitem[type="checkbox"]::before {
    border-radius: 2px;
  }

  menupopup
    menuitem:is([type="checkbox"], [type="radio"])[_moz-menuactive="true"]::before {
    background-color: var(--color03);
  }

  menupopup
    menuitem:is([type="checkbox"], [type="radio"])[_moz-menuactive="true"]:active::before {
    background-color: var(--checkbox-unchecked-active-bgcolor);
  }

  menupopup
    menuitem:is([type="checkbox"], [type="radio"])[checked="true"][_moz-menuactive="true"]::before {
    background-color: var(--uc-hover-bgcolor);
  }

  menupopup
    menuitem:is([type="checkbox"], [type="radio"])[checked="true"][_moz-menuactive="true"]:active::before {
    background-color: var(--uc-active-bgcolor);
  }

  menupopup menuitem[type="checkbox"][checked="true"]::before {
    background-image: url(chrome://userchrome/content/check.svg);
    border-color: var(--uc-border-color);
    background-color: var(--color01);
  }

  menupopup menuitem[type="radio"]::before {
    border-radius: 100%;
  }

  menupopup menuitem[type="radio"][checked="true"]::before {
    background-image: url(chrome://userchrome/content/radio.svg);
    border-color: var(--uc-border-color);
    background-color: var(--color01);
  }

  menupopup menuitem:is([type="checkbox"], [type="radio"]) .menu-iconic-left {
    display: none;
  }

  #ContentSelectDropdown
    > menupopup
    > :where(menucaption, menuitem)
    > .menu-iconic-text,
  menupopup.in-menulist > :where(menucaption, menuitem) > .menu-iconic-text {
    padding-block: unset !important;
  }

  :is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    :is(menu, menuitem, menucaption),
  panel[type="autocomplete-richlistbox"] > richlistbox > richlistitem {
    padding-inline: 8px !important;
    min-height: var(--menuitem-height) !important;
    border: none !important;
  }

  :is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    :is(menu, menuitem, menucaption)
    > :is(label, .menu-iconic-text, .menu-text) {
    padding-inline: 0 !important;
    font: menu !important;
  }

  :is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    menucaption {
    font-weight: inherit !important;
    min-height: 22px !important;
    border-bottom: 1px solid var(--menu-separator-color) !important;
    margin-block: 1px 2px;
    padding-inline: 5px !important;
  }

  :is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    menucaption:first-child {
    margin-bottom: 2px !important;
    border-bottom: 1px solid var(--menu-separator-color) !important;
  }

  :is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    menucaption
    > :is(label, .menu-iconic-text, .menu-text) {
    font-weight: 600 !important;
  }

  :is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
    menucaption:first-child
    > :is(label, .menu-iconic-text, .menu-text) {
    margin-block: -3px 0 !important;
  }

  #ContentSelectDropdown > menupopup {
    background-color: transparent !important;
    --content-select-background-image: none !important;
    color: var(--menu-color) !important;
    background-image: unset !important;
  }

  #ContentSelectDropdown > menupopup > menuitem:not([_moz-menuactive="true"]),
  menupopup.in-menulist > menuitem:not([_moz-menuactive="true"]) {
    background-color: transparent !important;
    color: var(--menu-color) !important;
  }

  #ContentSelectDropdown > menupopup > menuitem[disabled="true"],
  menupopup.in-menulist > menuitem[disabled="true"] {
    appearance: none !important;
    color: var(--menu-disabled-color) !important;
    background-color: initial !important;
  }

  menupopup.in-menulist {
    appearance: none !important;
    border: none !important;
    border-radius: var(--uc-border-radius) !important;
    margin: var(--uc-margin) !important;
    overflow: hidden !important;
    color: var(--menu-color) !important;
    background-image: unset !important;
    --menu-background-color: var(--ui-secondary-bg) !important;
  }

  #ContentSelectDropdown > menupopup .contentSelectDropdown-searchbox {
    appearance: none !important;
    color: inherit !important;
    border-radius: var(--context-menuitem-border-radius);
    margin-block: 0 !important;
    margin-inline: var(--uc-inner-padding-magnitude) !important;
    padding-inline-start: 3px !important;
    background-color: var(--secondary-color) !important;
    padding-block: 0 !important;
    transition: 300ms background-color !important;
    min-height: var(--menuitem-height) !important;
    -moz-user-modify: read-write !important;
  }

  #ContentSelectDropdown
    > menupopup
    .contentSelectDropdown-searchbox:focus-within {
    background-color: var(--secondary-color) !important;
    transition: 300ms background-color !important;
  }

  #ContentSelectDropdown
    > menupopup
    .contentSelectDropdown-searchbox
    + :is(menu, menuitem) {
    margin-top: 4px;
  }

  panel[type="autocomplete-richlistbox"] > richlistbox {
    background: none !important;
    color: var(--menu-color) !important;
  }

  .grid-element-width-resizer {
    --inline-inset: 3px !important;
    width: 4px !important;
  }

  .menu-text {
    padding-inline: var(--context-padding-inline) !important;
  }

  :is(.menu-accel, .menu-iconic-accel)[value] {
    margin-inline: 1.55em calc(var(--menu-right-margin) + 4px) !important;
    padding-block: 0 !important;
  }

  menuitem:not([disabled="true"]) :is(.menu-accel, .menu-iconic-accel) {
    color: var(--panel-shortcut-color);
  }

  menuitem[disabled="true"] :is(.menu-accel, .menu-iconic-accel) {
    opacity: 0.6;
  }

  menuseparator {
    appearance: none !important;
    border-color: var(--menu-separator-color) !important;
    margin: var(--menu-separator-margin) !important;
    margin-inline: var(--uc-inner-padding-magnitude) !important;
    padding: 0 !important;
  }

  menuseparator[id]:not(#context-sep-open, #context-media-sep-commands, #context-sep-copylink, #spell-suggestions-separator, #context-sep-selectall) {
    display: none !important;
  }

  menuseparator:not([id]) {
    display: -moz-box !important;
  }

  menuseparator:last-child {
    display: none;
  }

  menupopup[menu-api]
    menuitem:is([type="checkbox"], [type="radio"])
    .menu-iconic-left {
    display: none !important;
  }

  .CodeMirror-dialog.CodeMirror-dialog-top {
    display: flex !important;
    flex-flow: row nowrap;
    align-items: center !important;
    padding-inline: 6px !important;
  }

  .CodeMirror-dialog.CodeMirror-dialog-top .CodeMirror-search-field {
    width: auto !important;
    flex-grow: 1 !important;
    flex-shrink: 1 !important;
  }

  .CodeMirror-search-hint {
    margin-inline-end: 4px !important;
  }

  /* highlight stylesheets owned by the user so they're easier to find */
  #style-editor-chrome-window
        .stylesheet-name
        label:is([value^="uc-"], [value^="userChrome"], [value^="userContent"], [value="custom-chrome.css"], [value="custom-content.css"], [tooltiptext^="chrome://userchrome/"], [tooltiptext^="file://"])
  {
    text-decoration: underline !important;
    color: var(--secondary-color) !important;
  }

  @supports -moz-bool-pref("userChrome.css.mac-ui-fonts") {
    menupopup {
      font-family: SF Pro Text, Segoe UI, sans-serif !important;
      font-kerning: normal !important;
    }

    :is(#ContentSelectDropdown, menupopup.in-menulist, .contentSelectDropdown-ingroup)
      :is(menu, menuitem, menucaption)
      > :is(label, .menu-iconic-text, .menu-text) {
      font-family: SF Pro Text, Segoe UI, sans-serif !important;
      font-kerning: normal !important;
    }
  }

  @supports -moz-bool-pref("userChrome.css.remove-menu-borders") {
    .menupopup-arrowscrollbox {
      border: none !important;
    }
  }
}
